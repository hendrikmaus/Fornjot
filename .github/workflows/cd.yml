name: Continuous Deployment

on:
  push:
    # todo remove feature branch after testing
    branches: [ main, activate-release-operator ]

env:
  CARGO_TERM_COLOR: always

  # Name of the crate from Cargo.toml
  # used to rename and upload the binaries
  PROJ_NAME: fj-app

defaults:
  run:
    shell: bash

jobs:
  binaries:
    name: Binaries
    strategy:
      matrix:
        include:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: x86_64-apple-darwin, os: macOS-latest }
          - { target: aarch64-apple-darwin, os: macOS-latest }
          - { target: x86_64-pc-windows-msvc, os: windows-latest }

    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Toolchain
        uses: oxidecomputer/actions-rs_toolchain@master
        with:
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Cache
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.target }}

      - name: Binaries | Compile
        uses: actions-rs/cargo@v1
        with:
          args: --release --target ${{ matrix.target }}
          command: build

      - name: Binaries | Prepare upload
        run: |
          # Include compile target in binary name

          src="target/${{ matrix.target }}/release/${PROJ_NAME}"
          dst="${GITHUB_WORKSPACE}/${PROJ_NAME}-${{ matrix.target }}"

          if [[ "${RUNNER_OS}" == "Windows" ]]; then
            src="${src}.exe"
            dst="${dst}.exe"
          fi

          mv -v "${src}" "${dst}"
          chmod -v +x "${dst}"

      - name: Binaries | Upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PROJ_NAME }}-${{ matrix.target }}
          path: ${{ env.PROJ_NAME }}-*

  release:
    name: Release
    needs: binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal

      - name: Operator | Cache
        uses: Swatinem/rust-cache@v1
        with:
          key: release-operator-01
          working-directory: ./release-operator

      - name: Operator | Deduce
        id: release
        working-directory: ./release-operator
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_LABEL: release
          RUST_LOG: info
        run: |
          # Run release operator
          cargo run

      - name: Binaries | Download
        if: ${{ steps.release.outputs.release-detected == 'true' }}
        uses: actions/download-artifact@v3

      - name: Binaries | Checksums
        if: ${{ steps.release.outputs.release-detected == 'true' }}
        run: |
          # Build binary checksums
          for file in "${PROJ_NAME}"-*/"${PROJ_NAME}"-*; do
            echo "Calculating checksum for: $(basename "${file}")"
            openssl dgst -sha256 -r "${file}" \
              | awk '{print $1}' > "${file}.sha256"
          done

      - name: Create GitHub Release
        if: ${{ steps.release.outputs.release-detected == 'true' }}
        uses: softprops/action-gh-release@v0.1.14
        with:
          tag_name: ${{ steps.release.outputs.tag-name }}
          name: ${{ steps.release.outputs.tag-name }}
          files: ${{ env.PROJ_NAME }}-*/${{ env.PROJ_NAME }}-*
